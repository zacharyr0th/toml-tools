import re

CATEGORIES = {
    "DeFi": [
        r"\b(?:de)?fi(?:nance)?\b", r"\bswap(?:ping)?\b", r"\bexchange\b", r"\blend(?:ing)?\b",
        r"\bborrow(?:ing)?\b", r"\byield\b", r"\bamm\b", r"\bliquidity\b", r"\bstaking\b", r"\bvault\b",
        r"\bsynthetic(?:s)?\b", r"\bderivative(?:s)?\b", r"\bmoney\s*market\b", r"\basset\s*management\b",
        r"\bdex\b", r"\bdecentralized\s*exchange\b", r"\baave\b", r"\bcompound\b", r"\buniswap\b",
        r"\bsushiswap\b", r"\bcurve\b", r"\bbalancer\b", r"\bmaker(?:dao)?\b", r"\binstadapp\b",
        r"\b1inch\b", r"\bpancakeswap\b", r"\btraderjo(?:e|s)\b", r"\bperp(?:etual)?\b", r"\bfutures?\b",
        r"\boptions?\b", r"\binsurance\b", r"\bcollateral(?:ized)?\b", r"\bleverag(?:e|ing)\b",
        r"\bliquidat(?:e|ion)\b", r"\bfarming\b", r"\bharvest(?:ing)?\b", r"\byield\s*optimization\b",
        r"\bflash\s*loan\b", r"\bimpermanent\s*loss\b", r"\bslippage\b", r"\btvl\b", r"\btotal\s*value\s*locked\b",
        r"\bstable(?:coin)?\b", r"\bover(?:\s|-)?collateral(?:ized)?\b", r"\balgorithmic\b",
        r"\brebase\b", r"\belastic\s*supply\b", r"\bfrax\b", r"\bdai\b", r"\busdc\b", r"\busdt\b",
        r"\bweth\b", r"\bwbtc\b", r"\bwrapped\b", r"\bbridge(?:d)?\b", r"\bcross[-\s]chain\b",
        r"\bmulti[-\s]chain\b", r"\binteroperability\b", r"\batomic\s*swap\b", r"\bpeg(?:ged)?\b",
        r"\bapy\b", r"\bcefi\b", r"\byield\s*farming\b", r"\bliquidity\s*mining\b",
        r"\bflash\s*swap\b", r"\boracle\b", r"\bprice\s*feed\b", r"\bsmart\s*contract\b",
        r"\bgas\s*fee\b", r"\bgas\s*price\b", r"\bdefi\s*protocol\b", r"\bdefi\s*platform\b",
        r"\bdefi\s*project\b", r"\bdefi\s*app\b", r"\bdefi\s*dapp\b", r"\bdefi\s*ecosystem\b",
        r"\bdefi\s*token\b", r"\bgovernance\s*token\b", r"\byield\s*aggregator\b",
        r"\bliquidity\s*pool\b", r"\bamm\s*protocol\b", r"\bvault\s*strategy\b",
        r"\bflash\s*loan\s*attack\b", r"\bimpermanent\s*loss\s*protection\b",
        r"\bdefi\s*insurance\b", r"\bdefi\s*derivatives\b", r"\bdefi\s*options\b",
        r"\bdefi\s*futures\b", r"\bdefi\s*perpetuals\b", r"\bdefi\s*synthetics\b",
        r"\bdefi\s*indices\b", r"\bdefi\s*etfs\b", r"\bdefi\s*mutual\s*funds\b",
        r"\bdefi\s*lending\b", r"\bdefi\s*borrowing\b", r"\bdefi\s*staking\b",
        r"\bdefi\s*yield\b", r"\bdefi\s*farming\b", r"\bdefi\s*mining\b",
        r"\bdefi\s*liquidity\b", r"\bdefi\s*swap\b", r"\bdefi\s*exchange\b",
        r"\bdefi\s*dex\b", r"\bdefi\s*amm\b", r"\bdefi\s*bridge\b", r"\bdefi\s*cross-chain\b",
        r"\bpancake(?:swap)?\b", r"\bliquidswap\b", r"\bswap(?:ster)?\b", r"\btrader(?:joe|moe)\b",
        r"\byield[-\s]server\b", r"\blending[-\s]borrowing\b", r"\bvault\b", r"\bstaking\b",
        r"\btoken[-\s]lockup\b", r"\btoken[-\s]vesting\b", r"\bmerkle[-\s]distributor\b",
        r"\bliquidity[-\s]pool\b", r"\bamm\b", r"\bdefi[-\s]dashboard\b", r"\bdefi[-\s]analytics\b",
        r"\blido\b", r"\baave\b", r"\bhypersync\b", r"\bmaker\b", r"\bjustlend\b", 
        r"\buniswap\b", r"\bfrax\s*staked\s*eth\b", r"\brocket\s*pool\b", r"\bbalancer\b",
        r"\bcompound\s*finance\b", r"\bjoe\b", r"\bcurve\s*finance\b", r"\bvenus\b",
        r"\bsushi\s*swap\b", r"\bsynthetix\b", r"\bjuststables\b", r"\bkasino\b",
        r"\brayburn\b", r"\bstargate\b", r"\bsparkfi\b", r"\bwormhole\s*staked\s*eth\b",
        r"\bpuffer\s*finance\b", r"\bopolis\s*ecosystem\b", r"\bsyncera\b", 
        r"\bconvex\s*finance\b", r"\brebel\b", r"\bbalancer\b", r"\bsilo\b", 
        r"\bsuperfluid\b", r"\bmetavault\s*trade\b", r"\bfraxlend\b", r"\btokemak\b",
        r"\bstake\s*dao\b", r"\bdma\b", r"\bstargate\s*finance\b", r"\bthena\b", 
        r"\bthx\s*network\b", r"\bstakewise\b", r"\bnarwhal\b", r"\bfluid\b", 
        r"\bfraxtal\s*temptation\b", r"\bangle\s*protocol\b", r"\blightning\s*network\b",
        r"\bliquity\b", r"\beuler\b", r"\bstakewise\b",
        r"\bliquid\s*staking\b", r"\blending\b", r"\bbridge\b", r"\bdexes\b", r"\brebase\b",
        r"\bliquid\s*restaking\b", r"\bcdp\b", r"\brwa\b", r"\breal[-\s]world[-\s]assets?\b", r"\bstablecoin\b", r"\bprivate[-\s]credit\b",
        r"\bcommodities\b", r"\binstitutional[-\s]funds?\b", r"\bcorporate[-\s]bonds?\b",
        r"\byield\b", r"\basset[-\s]class(?:es)?\b", r"\btreasur(?:y|ies)\b",
        r"\bglobal[-\s]bonds?\b", r"\bstocks?\b", r"\bprivate[-\s]credit\b",
        r"\basset[-\s]holders?\b", r"\basset[-\s]issuers?\b", r"\btokeniz(?:ed|ation)\b",
        r"\bdigital[-\s]liquidity[-\s]fund\b", r"\bmoney[-\s]market[-\s]fund\b",
        r"\bshort[-\s]duration[-\s]yield\b", r"\bgovernment[-\s]bond[-\s]fund\b",
        r"\bt-bills\b", r"\bultrashort[-\s]bond\b", r"\binvestment[-\s]grade\b",
        r"\bhigh[-\s]yield[-\s]corp[-\s]bond\b", r"\bsenior[-\s]pool\b",
        r"\bsecured[-\s]lending\b", r"\bprecious[-\s]metal\b", r"\bgold\b", r"\bsilver\b",
        r"\bventure[-\s]fund\b", r"\bcrypto[-\s]carry[-\s]fund\b", r"\btokenized[-\s]stocks?\b"
    ],
    "Gaming": [
        r"\bgam(?:e|ing)\b", r"\bplay.*earn\b", r"\bvirtual\s*world\b", r"\bavatar\b", r"\besports?\b",
        r"\baxie\b", r"\bdecentraland\b", r"\bsandbox\b", r"\bgala\b", r"\bimmutable\s*x\b", r"\bflow\b",
        r"\bwax\b", r"\beno(?:s|gin)?\b", r"\bultra\b", r"\bmetaverse\b", r"\bnft\s*gaming\b",
        r"\bguild\b", r"\bitem\b", r"\basset\b", r"\bskin\b", r"\bcharacter\b", r"\bquest\b",
        r"\bmission\b", r"\breward\b", r"\btoken(?:omics)?\b", r"\bvoxel\b", r"\b3d\b", r"\baugmented\s*reality\b",
        r"\bvirtual\s*reality\b", r"\bar\b", r"\bvr\b", r"\bsocial\s*fi\b", r"\bmovement\s*to\s*earn\b",
        r"\bnft\s*game\b", r"\bblockchain\s*game\b", r"\bcrypto\s*game\b", r"\bplay2earn\b",
        r"\bgame\s*token\b", r"\bgame\s*asset\b", r"\bgame\s*nft\b", r"\bgame\s*dao\b",
        r"\bgame\s*guild\b", r"\bgame\s*marketplace\b", r"\bgame\s*economy\b",
        r"\bgame\s*metaverse\b", r"\bgame\s*virtual\s*world\b", r"\bgame\s*avatar\b",
        r"\bgame\s*land\b", r"\bgame\s*property\b", r"\bgame\s*item\b", r"\bgame\s*weapon\b",
        r"\bgame\s*character\b", r"\bgame\s*skin\b", r"\bgame\s*cosmetic\b",
        r"\bgame\s*lootbox\b", r"\bgame\s*crafting\b", r"\bgame\s*breeding\b",
        r"\bgame\s*battle\b", r"\bgame\s*pvp\b", r"\bgame\s*pve\b", r"\bgame\s*raid\b",
        r"\bgame\s*dungeon\b", r"\bgame\s*quest\b", r"\bgame\s*mission\b",
        r"\bgame\s*achievement\b", r"\bgame\s*leaderboard\b", r"\bgame\s*tournament\b",
        r"\bgame\s*esport\b", r"\bgame\s*streaming\b", r"\bgame\s*nft\s*rental\b",
        r"\bgame\s*nft\s*lending\b", r"\bgame\s*nft\s*staking\b", r"\bgame\s*yield\b",
        r"\bgame\s*farming\b", r"\bgame\s*mining\b", r"\bgame\s*governance\b",
        r"\bdiamond[-\s]clicker\b", r"\bnft[-\s]game\b", r"\bgame[-\s]token\b", r"\bvirtual[-\s]world\b",
        r"\bplay[-\s]to[-\s]earn\b", r"\bp2e\b", r"\bgame[-\s]fi\b", r"\bmetaverse\b",
        r"\bgaming\b"
    ],
    "Social": [
        r"\bsocial\b", r"\bcommunity\b", r"\bmessag(?:e|ing)\b", r"\bchat\b", r"\bforum\b",
        r"\bnetwork(?:ing)?\b", r"\bcontent\b", r"\bmedia\b", r"\bblog\b", r"\bmicroblog(?:ging)?\b",
        r"\bprofile\b", r"\bsteemit\b", r"\bdtube\b", r"\bpeepeth\b", r"\blenster\b", r"\bmirror\b",
        r"\bdecentralized\s*social\b", r"\bweb3\s*social\b", r"\bcreator\s*economy\b", r"\bfan\s*token\b",
        r"\bsocial\s*token\b", r"\bcommunity\s*token\b", r"\bdao\b", r"\bgovernance\b", r"\bvoting\b",
        r"\bproposal\b", r"\bconsensus\b", r"\breputation\b", r"\bidentity\b", r"\bdid\b",
        r"\bdecentralized\s*id\b", r"\bself[-\s]sovereign\b", r"\bauthentication\b", r"\bcivic\b",
        r"\buport\b", r"\bselfkey\b", r"\bkyc\b", r"\bknow\s*your\s*customer\b", r"\bprivacy\b",
        r"\bencrypt(?:ion)?\b", r"\banonymous\b", r"\bconfidential\b", r"\bzero[-\s]knowledge\b",
        r"\bzk\b", r"\bsecure\s*messaging\b", r"\bpodcast\b", r"\bstreaming\b", r"\blive\b",
        r"\bvideo\b", r"\baudio\b", r"\bmusic\b", r"\bart\b", r"\bcollectible\b", r"\bnft\b",
        r"\bsocial\s*token\b", r"\bsocial\s*nft\b", r"\bsocial\s*dao\b",
        r"\bsocial\s*platform\b", r"\bsocial\s*network\b", r"\bsocial\s*media\b",
        r"\bsocial\s*app\b", r"\bsocial\s*dapp\b", r"\bsocial\s*marketplace\b",
        r"\bsocial\s*economy\b", r"\bsocial\s*metaverse\b", r"\bsocial\s*virtual\s*world\b",
        r"\bsocial\s*avatar\b", r"\bsocial\s*profile\b", r"\bsocial\s*identity\b",
        r"\bsocial\s*reputation\b", r"\bsocial\s*credit\b", r"\bsocial\s*score\b",
        r"\bsocial\s*graph\b", r"\bsocial\s*feed\b", r"\bsocial\s*post\b",
        r"\bsocial\s*comment\b", r"\bsocial\s*like\b", r"\bsocial\s*share\b",
        r"\bsocial\s*follow\b", r"\bsocial\s*friend\b", r"\bsocial\s*group\b",
        r"\bsocial\s*community\b", r"\bsocial\s*governance\b", r"\bsocial\s*voting\b",
        r"\bsocial\s*proposal\b", r"\bsocial\s*decision\b", r"\bsocial\s*consensus\b",
        r"\bsocial\s*curation\b", r"\bsocial\s*content\b", r"\bsocial\s*creator\b",
        r"\bsocial\s*influencer\b", r"\bsocial\s*fan\b", r"\bsocial\s*follower\b",
        r"\bsocial\s*engagement\b", r"\bsocial\s*interaction\b", r"\bsocial\s*reward\b",
        r"\bsocial\s*incentive\b", r"\bsocial\s*tipping\b", r"\bsocial\s*donation\b",
        r"\bchat[-\s]room\b", r"\bsocial[-\s]network\b", r"\bcommunity\b", r"\bprofile\b",
        r"\bmessaging\b", r"\bsocial[-\s]token\b", r"\bsocial[-\s]fi\b", r"\bdao\b"
    ],
    "Infrastructure": [
        r"\binfra(?:structure)?\b", r"\bprotocol\b", r"\bnetwork\b", r"\boracle\b",
        r"\bbridge\b", r"\bscaling\b", r"\blayer[_\s]?2\b", r"\bl2\b", r"\binteroperability\b",
        r"\bcross[-\s]chain\b", r"\bnode\b", r"\bvalidator\b",
        r"\bchainlink\b", r"\brollup\b",
        r"\bipfs\b", r"\bswarm\b", r"\bstorage\b", r"\bdistributed[-\s]storage\b", r"\bcompute\b",
        r"\bdistributed[-\s]compute\b", r"\bcloud\b", r"\bedge[-\s]computing\b", r"\bfog[-\s]computing\b",
        r"\bmesh[-\s]network\b", r"\biot\b", r"\binternet[-\s]of[-\s]things\b",
        r"\bdev[-\s]tools?\b", r"\bsdk\b", r"\bapi\b", r"\blibrary\b", r"\bframework\b", r"\btesting\b",
        r"\bdeployment\b", r"\bide\b", r"\bcompiler\b", r"\bweb3[._]?js\b", r"\bethers[._]?js\b",
        r"\btruffle\b", r"\bhardhat\b", r"\bganache\b", r"\bwallet\b", r"\bcustody\b",
        r"\bkey[-\s]management\b", r"\bmulti[-\s]sig\b", r"\bhardware[-\s]wallet\b", r"\bmetamask\b",
        r"\btrezor\b", r"\bledger\b",
        r"\bscalability\s*solution\b", r"\binteroperability\s*protocol\b", r"\bcross-chain\s*bridge\b",
        r"\boracle\s*network\b", r"\bsmart\s*contract\s*platform\b", r"\blayer\s*1\b", r"\blayer\s*2\b",
        r"\bsidechain\b", r"\brollup\b",
        r"\bnode\s*operator\b", r"\bblock\s*explorer\b", r"\bwallet\s*provider\b",
        r"\bcustody\s*solution\b", r"\bkey\s*management\b", r"\bmulti-sig\b", r"\bhardware\s*wallet\b",
        r"\bcold\s*storage\b", r"\bhot\s*wallet\b", r"\bseed\s*phrase\b", r"\bprivate\s*key\b",
        r"\bpublic\s*key\b", r"\baddress\b", r"\bsignature\b", r"\bcryptography\b",
        r"\bencryption\b", r"\bhashing\b", r"\bzero-knowledge\s*proof\b", r"\bzkrollup\b",
        r"\bwallet[-\s]adapter\b", r"\bwallet[-\s]connector\b", r"\bcross[-\s]chain\b",
        r"\bbridge\b", r"\boracle\b", r"\bsdk\b", r"\bprotocol\b",
        r"\bsmart[-\s]contract\b", r"\bblockchain[-\s]explorer\b", r"\btransaction[-\s]parser\b",
        r"\bgas[-\s]estimator\b", r"\bnode\b", r"\bvalidator\b",
        r"\bsecurity\s*extension\b", r"\bmev\b",
        r"\bblockchain[-\s]network\b", r"\bon[-\s]chain\b",
        r"\btokenization\b", r"\bcross[-\s]chain\b", r"\bpublic[-\s]blockchains?\b",
        r"\bdata[-\s]indexer\b", r"\bsubgraph\b", r"\bquery[-\s]language\b", r"\bgraphql\b",
        r"\bdata[-\s]analytics\b", r"\bdata[-\s]visualization\b", r"\bdashboard\b",
        r"\bmonitoring\b", r"\bmetrics\b", r"\btelemetry\b", r"\blogging\b",
        r"\bevent[-\s]streaming\b", r"\bmessage[-\s]queue\b", r"\bpubsub\b",
        r"\bcache\b", r"\bdatabase\b", r"\bnosql\b", r"\bsql\b", r"\borm\b",
        r"\bci[-/]cd\b", r"\bcontainer(?:ization)?\b", r"\bdocker\b", r"\bkubernetes\b",
        r"\bserverless\b", r"\bfaas\b", r"\bfunction[-\s]as[-\s]a[-\s]service\b",
        r"\bapi[-\s]gateway\b", r"\bload[-\s]balancer\b", r"\breverse[-\s]proxy\b",
        r"\bcdn\b", r"\bcontent[-\s]delivery[-\s]network\b", r"\bdns\b",
        r"\bsecurity[-\s]audit\b", r"\bpenetration[-\s]testing\b", r"\bvulnerability[-\s]scanner\b",
        r"\bfirewall\b", r"\biddos[-\s]protection\b", r"\bssl[-/]tls\b",
        r"\bvpn\b", r"\bproxy\b", r"\btor\b", r"\bi2p\b", r"\banonymity[-\s]network\b",
        r"\bdevops\b", r"\bsre\b", r"\bsite[-\s]reliability[-\s]engineering\b",
        r"\binfrastructure[-\s]as[-\s]code\b", r"\bconfiguration[-\s]management\b",
        r"\bterraform\b", r"\bansible\b", r"\bchef\b", r"\bpuppet\b",
        r"\bmonitoring\b", r"\blogging\b", r"\btracing\b", r"\bapm\b",
        r"\balert(?:ing)?\b", r"\bincident[-\s]response\b", r"\bchaos[-\s]engineering\b",
        r"\bperformance[-\s]testing\b", r"\bload[-\s]testing\b", r"\bstress[-\s]testing\b",
        r"\bbenchmarking\b", r"\bprofiling\b", r"\bdebugging\b", r"\btroubleshooting\b"
    ],
    "NFTs": [
        r"\bnft\b", r"\bnon[-\s]fungible\b", r"\bcollectible\b", r"\bdigital[-\s]asset\b",
        r"\bmarketplace\b", r"\bauction\b", r"\be[-\s]commerce\b", r"\bbuy\b", r"\bsell\b", r"\btrade\b",
        r"\bopensea\b", r"\brarible\b", r"\bfoundation\b", r"\bcryptokitties\b", r"\bsuper[-\s]rare\b",
        r"\bnifty[-\s]gateway\b", r"\baxie[-\s]infinity\b", r"\bcryptopunks\b", r"\bbored[-\s]ape\b",
        r"\bmeebits\b", r"\bart[-\s]blocks\b", r"\bdigital[-\s]art\b", r"\bgenerative[-\s]art\b",
        r"\bcrypto[-\s]art\b", r"\bvirtual[-\s]land\b", r"\bvirtual[-\s]real[-\s]estate\b",
        r"\bdigital[-\s]fashion\b", r"\bwearable\b", r"\bavatar[-\s]customization\b", r"\bfractional[-\s]nft\b",
        r"\bnft[-\s]fractionalization\b", r"\bnft[-\s]lending\b", r"\bnft[-\s]staking\b",
        r"\bnft[-\s]royalties\b", r"\berc[-\s]?721\b", r"\berc[-\s]?1155\b", r"\btoken[-\s]standard\b",
        r"\bmetadata\b", r"\bprovenance\b", r"\bauthenticity\b", r"\bscarcity\b", r"\bunique\b",
        r"\blimited[-\s]edition\b", r"\bdigital[-\s]ownership\b", r"\bip[-\s]rights\b",
        r"\blicense\b", r"\bcopyright\b", r"\btrademark\b", r"\bmusic[-\s]nft\b", r"\bticket[-\s]nft\b",
        r"\bmembership[-\s]nft\b", r"\baccess[-\s]token\b", r"\bsoul[-\s]bound[-\s]token\b", r"\bsbt\b",
        r"\bnon-fungible\s*token\b", r"\bdigital\s*collectible\b", r"\bcrypto\s*art\b",
        r"\bdigital\s*asset\b", r"\bnft\s*marketplace\b", r"\bnft\s*auction\b",
        r"\bnft\s*minting\b", r"\bnft\s*drop\b", r"\bnft\s*collection\b", r"\bnft\s*project\b",
        r"\bnft\s*artist\b", r"\bnft\s*creator\b", r"\bnft\s*collector\b", r"\bnft\s*investor\b",
        r"\bnft\s*trader\b", r"\bnft\s*flipper\b", r"\bnft\s*whale\b", r"\bnft\s*royalty\b",
        r"\bnft\s*licensing\b", r"\bnft\s*copyright\b", r"\bnft\s*ownership\b",
        r"\bnft\s*provenance\b", r"\bnft\s*authenticity\b", r"\bnft\s*rarity\b",
        r"\bnft\s*attributes\b", r"\bnft\s*metadata\b", r"\bnft\s*token\s*standard\b",
        r"\berc-721\b", r"\berc-1155\b", r"\bnft\s*gaming\b", r"\bnft\s*virtual\s*land\b",
        r"\bnft\s*virtual\s*real\s*estate\b", r"\bnft\s*metaverse\b", r"\bnft\s*avatar\b",
        r"\bnft\s*wearable\b", r"\bnft\s*fashion\b", r"\bnft\s*music\b", r"\bnft\s*video\b",
        r"\bnft\s*meme\b", r"\bnft\s*domain\b", r"\bnft\s*ticket\b", r"\bnft\s*membership\b",
        r"\bnft\s*badge\b", r"\bnft\s*certificate\b", r"\bnft\s*fractional\b",
        r"\bnft\s*fractionalization\b", r"\bnft\s*index\b", r"\bnft\s*fund\b",
        r"\bnft\s*lending\b", r"\bnft\s*staking\b", r"\bnft\s*rental\b", r"\bnft\s*governance\b",
        r"\bnft[-\s]marketplace\b", r"\bnft[-\s]minter\b", r"\bnft[-\s]staking\b",
        r"\bnft[-\s]rental\b", r"\bnft[-\s]fractionalization\b", r"\bdigital[-\s]collectible\b",
        r"\bvirtual[-\s]asset\b", r"\bcrypto[-\s]art\b", r"\btoken[-\s]standard\b",
        r"\bnft\s*lending\b", r"\bnft\s*marketplace\b", r"\bnft\b"
    ]
}

def compile_patterns(patterns):
    """Compile a list of regex patterns with case-insensitive flag."""
    return [re.compile(pattern, re.IGNORECASE) for pattern in patterns]

COMPILED_CATEGORIES = {
    category: compile_patterns(patterns)
    for category, patterns in CATEGORIES.items()
}

REPO_PATTERN = re.compile(
    r'\[\[repo\]\]\s*url\s*=\s*"(https://github\.com/([^/]+)/([^/"\s]+))"'
    r'(?:\s*missing\s*=\s*(true|false))?',
    re.IGNORECASE
)
